{"version":3,"sources":["../../../../../server/api/helpers/redux/actions.js"],"names":["defineAction","name","attributes","result","type","i","length","attributeName","defineActions","actionDefinitions","Object","keys","actionName","action","mapActions","dispatch","actions","actionNames","populateConstants","defs","constants","newDef","JSON","parse","stringify","newDefId","push"],"mappings":";;;;;;;;;AAAA;;AAEA,IAAMA,YAAY,GAAG,SAAfA,YAAe,CAACC,IAAD,EAAOC,UAAP;AAAA,SAAsB,YAAa;AACtD,QAAMC,MAAM,GAAG;AACbC,MAAAA,IAAI,EAAEH;AADO,KAAf;;AAGA,SAAK,IAAII,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGH,UAAU,CAACI,MAA/B,EAAuCD,CAAC,IAAI,CAA5C,EAA+C;AAC7C,UAAME,aAAa,GAAGL,UAAU,CAACG,CAAD,CAAhC;AACAF,MAAAA,MAAM,CAACI,aAAD,CAAN,GAA6BF,CAA7B,4BAA6BA,CAA7B,yBAA6BA,CAA7B;AACD;;AACD,WAAOF,MAAP;AACD,GAToB;AAAA,CAArB;;;;AAWA,IAAMK,aAAa,GAAG,SAAhBA,aAAgB,CAAAC,iBAAiB,EAAI;AACzC,MAAMN,MAAM,GAAG,EAAf;;AAEA,OAAK,IAAIE,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGI,iBAAiB,CAACH,MAAtC,EAA8CD,CAAC,IAAI,CAAnD,EAAsD;AACpD,QAAIJ,IAAI,GAAGS,MAAM,CAACC,IAAP,CAAYF,iBAAiB,CAACJ,CAAD,CAA7B,EAAkC,CAAlC,CAAX;AACA,QAAMO,UAAU,GAAGH,iBAAiB,CAACJ,CAAD,CAAjB,CAAqBJ,IAArB,CAAnB;AACA,QAAMY,MAAM,GAAGb,YAAY,CAACY,UAAD,EAAaH,iBAAiB,CAACJ,CAAD,CAAjB,CAAqBH,UAAlC,CAA3B;AACAD,IAAAA,IAAI,GAAG,2BAAUA,IAAV,CAAP;AACAE,IAAAA,MAAM,CAACF,IAAD,CAAN,GAAeY,MAAf;AACD;;AAED,SAAOV,MAAP;AACD,CAZD;;;;AAcA,IAAMW,UAAU,GAAG,SAAbA,UAAa,CAACC,QAAD,EAAWC,OAAX,EAAuB;AACxC,MAAMb,MAAM,GAAG,EAAf;AACA,MAAMc,WAAW,GAAGP,MAAM,CAACC,IAAP,CAAYK,OAAZ,CAApB;;AAFwC,6BAI/BX,CAJ+B;AAKtC,QAAMO,UAAU,GAAGK,WAAW,CAACZ,CAAD,CAA9B;AACA,QAAMQ,MAAM,GAAGG,OAAO,CAACJ,UAAD,CAAtB;;AACAT,IAAAA,MAAM,CAACS,UAAD,CAAN,GAAqB;AAAA,aAAaG,QAAQ,CAACF,MAAM,MAAN,mBAAD,CAArB;AAAA,KAArB;AAPsC;;AAIxC,OAAK,IAAIR,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGY,WAAW,CAACX,MAAhC,EAAwCD,CAAC,IAAI,CAA7C,EAAgD;AAAA,UAAvCA,CAAuC;AAI/C;;AAED,SAAOF,MAAP;AACD,CAXD;;;;AAaA,IAAMe,iBAAiB,GAAG,SAApBA,iBAAoB,CAACC,IAAD,EAAOC,SAAP,EAAqB;AAC7C,MAAMjB,MAAM,GAAG,EAAf;;AACA,OAAK,IAAIE,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGc,IAAI,CAACb,MAAzB,EAAiCD,CAAC,IAAI,CAAtC,EAAyC;AACvC,QAAMgB,MAAM,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,SAAL,CAAeL,IAAI,CAACd,CAAD,CAAnB,CAAX,CAAf;AACA,QAAMoB,QAAQ,GAAGf,MAAM,CAACC,IAAP,CAAYU,MAAZ,EAAoB,CAApB,CAAjB;AACAA,IAAAA,MAAM,CAACI,QAAD,CAAN,GAAmBL,SAAS,CAACK,QAAD,CAA5B;AACAtB,IAAAA,MAAM,CAACuB,IAAP,CAAYL,MAAZ;AACD;;AACD,SAAOlB,MAAP;AACD,CATD;;;eAYeK,a","sourcesContent":["import camelCase from 'lodash/camelCase';\n\nconst defineAction = (name, attributes) => (...args) => {\n  const result = {\n    type: name,\n  };\n  for (let i = 0; i < attributes.length; i += 1) {\n    const attributeName = attributes[i];\n    result[attributeName] = args[i];\n  }\n  return result;\n};\n\nconst defineActions = actionDefinitions => {\n  const result = {};\n\n  for (let i = 0; i < actionDefinitions.length; i += 1) {\n    let name = Object.keys(actionDefinitions[i])[0];\n    const actionName = actionDefinitions[i][name];\n    const action = defineAction(actionName, actionDefinitions[i].attributes);\n    name = camelCase(name);\n    result[name] = action;\n  }\n\n  return result;\n};\n\nconst mapActions = (dispatch, actions) => {\n  const result = {};\n  const actionNames = Object.keys(actions);\n\n  for (let i = 0; i < actionNames.length; i += 1) {\n    const actionName = actionNames[i];\n    const action = actions[actionName];\n    result[actionName] = (...args) => dispatch(action(...args));\n  }\n\n  return result;\n};\n\nconst populateConstants = (defs, constants) => {\n  const result = [];\n  for (let i = 0; i < defs.length; i += 1) {\n    const newDef = JSON.parse(JSON.stringify(defs[i]));\n    const newDefId = Object.keys(newDef)[0];\n    newDef[newDefId] = constants[newDefId];\n    result.push(newDef);\n  }\n  return result;\n};\n\nexport { populateConstants, mapActions, defineAction, defineActions };\nexport default defineActions;\n"],"file":"actions.js"}