{"version":3,"sources":["../../../../../server/api/actions/grammarML/load.js"],"names":["load","req","reqSecured","grammarMLAllowedAttributes","Promise","resolve","reject","then","user","redisKey","err"],"mappings":";;;;;;;;;AAAA;;AAEA;;AAEA;;AACA;;AAEe,SAASA,IAAT,CAAcC,GAAd,EAAmB;AAChC,MAAMC,UAAU,GAAG,2BAAUD,GAAV,EAAeE,sCAAf,CAAnB;AACA,SAAO,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACtC,oCAAeJ,UAAf,EAA2BK,IAA3B,CACE,UAAAC,IAAI,EAAI;AACNH,MAAAA,OAAO,CACL,sBAAU;AACRI,QAAAA,QAAQ,EAAE;AADF,OAAV,CADK,CAAP;AAKD,KAPH,EAQE,UAAAC,GAAG;AAAA,aAAIJ,MAAM,CAACI,GAAD,CAAV;AAAA,KARL;AAUD,GAXM,CAAP;AAYD","sourcesContent":["import { datumLoad } from '../datum';\n\nimport grammarMLAllowedAttributes from './grammarMLAllowedAttributes';\n\nimport authentication from 'utils/authentication';\nimport reqSecure from 'utils/reqSecure';\n\nexport default function load(req) {\n  const reqSecured = reqSecure(req, grammarMLAllowedAttributes);\n  return new Promise((resolve, reject) => {\n    authentication(reqSecured).then(\n      user => {\n        resolve(\n          datumLoad({\n            redisKey: 'grammarML',\n          }),\n        );\n      },\n      err => reject(err),\n    );\n  });\n}\n"],"file":"load.js"}