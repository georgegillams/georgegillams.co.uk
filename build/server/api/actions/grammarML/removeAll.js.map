{"version":3,"sources":["../../../../../server/api/actions/grammarML/removeAll.js"],"names":["removeAll","req","reqSecured","grammarMLAllowedAttributes","Promise","resolve","reject","then","user","redisKey","includeDeleted","collectionData","i","length","existingValue","console","log","id","redis","lrem","JSON","stringify","err"],"mappings":";;;;;;;;;AAAA;;AAEA;;AAEA;;AACA;;AACA;;AACA;;AAEe,SAASA,SAAT,CAAmBC,GAAnB,EAAwB;AACrC,MAAMC,UAAU,GAAG,2BAAUD,GAAV,EAAeE,sCAAf,CAAnB;AACA,SAAO,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACtC,oCAAeJ,UAAf,EAA2BK,IAA3B,CACE,UAAAC,IAAI,EAAI;AACN,4BAAU;AAAEC,QAAAA,QAAQ,EAAE,WAAZ;AAAyBC,QAAAA,cAAc,EAAE;AAAzC,OAAV,EAA2DH,IAA3D,CACE,UAAAI,cAAc,EAAI;AAChB,aAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGD,cAAc,CAACE,MAAnC,EAA2CD,CAAC,IAAI,CAAhD,EAAmD;AACjD,cAAME,aAAa,GAAGH,cAAc,CAACC,CAAD,CAApC;AACAG,UAAAA,OAAO,CAACC,GAAR,gCAC0BF,aAAa,CAACG,EADxC,uBACuDL,CADvD;AAGAP,UAAAA,OAAO,CACLa,kBAAMC,IAAN,CAAW,WAAX,EAAwB,CAAxB,EAA2BC,IAAI,CAACC,SAAL,CAAeP,aAAf,CAA3B,CADK,CAAP;AAGD;AACF,OAXH;AAaD,KAfH,EAgBE,UAAAQ,GAAG;AAAA,aAAIhB,MAAM,CAACgB,GAAD,CAAV;AAAA,KAhBL;AAkBD,GAnBM,CAAP;AAoBD","sourcesContent":["import { datumRemove, datumLoad } from '../datum';\n\nimport grammarMLAllowedAttributes from './grammarMLAllowedAttributes';\n\nimport redis from 'utils/redis';\nimport authentication from 'utils/authentication';\nimport { UNAUTHORISED_WRITE } from 'helpers/constants';\nimport reqSecure from 'utils/reqSecure';\n\nexport default function removeAll(req) {\n  const reqSecured = reqSecure(req, grammarMLAllowedAttributes);\n  return new Promise((resolve, reject) => {\n    authentication(reqSecured).then(\n      user => {\n        datumLoad({ redisKey: 'grammarML', includeDeleted: true }).then(\n          collectionData => {\n            for (let i = 0; i < collectionData.length; i += 1) {\n              const existingValue = collectionData[i];\n              console.log(\n                `Permanently removing ${existingValue.id} at index ${i}`,\n              );\n              resolve(\n                redis.lrem('grammarML', 1, JSON.stringify(existingValue)),\n              );\n            }\n          },\n        );\n      },\n      err => reject(err),\n    );\n  });\n}\n"],"file":"removeAll.js"}