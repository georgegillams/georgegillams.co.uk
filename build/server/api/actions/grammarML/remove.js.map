{"version":3,"sources":["../../../../../server/api/actions/grammarML/remove.js"],"names":["remove","req","reqSecured","grammarMLAllowedAttributes","Promise","resolve","reject","then","user","redisKey","err"],"mappings":";;;;;;;;;AAAA;;AAEA;;AAEA;;AACA;;AACA;;AAEe,SAASA,MAAT,CAAgBC,GAAhB,EAAqB;AAClC,MAAMC,UAAU,GAAG,2BAAUD,GAAV,EAAeE,sCAAf,CAAnB;AACA,SAAO,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACtC,oCAAeJ,UAAf,EAA2BK,IAA3B,CACE,UAAAC,IAAI,EAAI;AACNH,MAAAA,OAAO,CAAC,wBAAY;AAAEI,QAAAA,QAAQ,EAAE;AAAZ,OAAZ,EAAuCP,UAAvC,CAAD,CAAP;AACD,KAHH,EAIE,UAAAQ,GAAG;AAAA,aAAIJ,MAAM,CAACI,GAAD,CAAV;AAAA,KAJL;AAMD,GAPM,CAAP;AAQD","sourcesContent":["import { datumRemove } from '../datum';\n\nimport grammarMLAllowedAttributes from './grammarMLAllowedAttributes';\n\nimport authentication from 'utils/authentication';\nimport { UNAUTHORISED_WRITE } from 'helpers/constants';\nimport reqSecure from 'utils/reqSecure';\n\nexport default function remove(req) {\n  const reqSecured = reqSecure(req, grammarMLAllowedAttributes);\n  return new Promise((resolve, reject) => {\n    authentication(reqSecured).then(\n      user => {\n        resolve(datumRemove({ redisKey: 'grammarML' }, reqSecured));\n      },\n      err => reject(err),\n    );\n  });\n}\n"],"file":"remove.js"}