{"version":3,"sources":["../../../../../server/api/actions/make-payment/createIntent.js"],"names":["createNewPaymentIntent","payment","Promise","resolve","reject","outstandingBalance","id","client_secret","stripeInstance","paymentIntents","create","amount","currency","createIntent","req","reqSecured","stripePaymentsAllowedAttributes","then","paymentIntent","redisKey","body","paymentId","paymentIntentId","paymentIntentClientSecret","err"],"mappings":";;;;;;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AACA;;;;;;AAEA,IAAMA,sBAAsB,GAAG,SAAzBA,sBAAyB,CAAAC,OAAO;AAAA,SACpC,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AAC/B,QACEH,OAAO,CAACI,kBAAR,GAA6B,EAA7B,IACAJ,OAAO,CAACI,kBAAR,GAA6B,OAF/B,EAGE;AACAF,MAAAA,OAAO,CAAC;AAAEG,QAAAA,EAAE,EAAE,IAAN;AAAYC,QAAAA,aAAa,EAAE;AAA3B,OAAD,CAAP;AACD,KALD,MAKO;AACLJ,MAAAA,OAAO,CACLK,mBAAeC,cAAf,CAA8BC,MAA9B,CAAqC;AACnCC,QAAAA,MAAM,EAAEV,OAAO,CAACI,kBADmB;AAEnCO,QAAAA,QAAQ,EAAE;AAFyB,OAArC,CADK,CAAP;AAMD;AACF,GAdD,CADoC;AAAA,CAAtC;;AAiBe,SAASC,YAAT,CAAsBC,GAAtB,EAA2B;AACxC,MAAMC,UAAU,GAAG,2BAAUD,GAAV,EAAeE,2CAAf,CAAnB;AACA,SAAO,IAAId,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACtC,0BAAKW,UAAL,EACGE,IADH,CACQ,UAAAhB,OAAO,EAAI;AACfD,MAAAA,sBAAsB,CAACC,OAAD,CAAtB,CACGgB,IADH,CACQ,UAAAC,aAAa,EAAI;AACrB,gCACE;AAAEC,UAAAA,QAAQ,EAAE;AAAZ,SADF,EAEE;AACEC,UAAAA,IAAI,EAAE;AACJC,YAAAA,SAAS,EAAEpB,OAAO,CAACK,EADf;AAEJgB,YAAAA,eAAe,EAAEJ,aAAa,CAACZ,EAF3B;AAGJiB,YAAAA,yBAAyB,EAAEL,aAAa,CAACX;AAHrC;AADR,SAFF,EAUGU,IAVH,CAUQ,YAAM;AACVd,UAAAA,OAAO,mBACFF,OADE;AAELsB,YAAAA,yBAAyB,EAAEL,aAAa,CAACX;AAFpC,aAAP;AAID,SAfH,WAgBS,UAAAiB,GAAG,EAAI;AACZpB,UAAAA,MAAM,CAACoB,GAAD,CAAN;AACD,SAlBH;AAmBD,OArBH,WAsBS,UAAAA,GAAG,EAAI;AACZpB,QAAAA,MAAM,CAAC,mCAAkBoB,GAAlB,CAAD,CAAN;AACD,OAxBH;AAyBD,KA3BH,WA4BS,UAAAA,GAAG,EAAI;AACZpB,MAAAA,MAAM,CAACoB,GAAD,CAAN;AACD,KA9BH;AA+BD,GAhCM,CAAP;AAiCD","sourcesContent":["import { datumCreate } from '../datum';\nimport reqSecure from 'utils/reqSecure';\nimport stripePaymentsAllowedAttributes from './stripePaymentsAllowedAttributes';\nimport stripeInstance from './stripe';\nimport load from './load';\nimport formatStripeError from './formatStripeError';\n\nconst createNewPaymentIntent = payment =>\n  new Promise((resolve, reject) => {\n    if (\n      payment.outstandingBalance < 30 &&\n      payment.outstandingBalance > 1000000\n    ) {\n      resolve({ id: null, client_secret: null });\n    } else {\n      resolve(\n        stripeInstance.paymentIntents.create({\n          amount: payment.outstandingBalance,\n          currency: 'gbp',\n        }),\n      );\n    }\n  });\n\nexport default function createIntent(req) {\n  const reqSecured = reqSecure(req, stripePaymentsAllowedAttributes);\n  return new Promise((resolve, reject) => {\n    load(reqSecured)\n      .then(payment => {\n        createNewPaymentIntent(payment)\n          .then(paymentIntent => {\n            datumCreate(\n              { redisKey: 'stripepayments' },\n              {\n                body: {\n                  paymentId: payment.id,\n                  paymentIntentId: paymentIntent.id,\n                  paymentIntentClientSecret: paymentIntent.client_secret,\n                },\n              },\n            )\n              .then(() => {\n                resolve({\n                  ...payment,\n                  paymentIntentClientSecret: paymentIntent.client_secret,\n                });\n              })\n              .catch(err => {\n                reject(err);\n              });\n          })\n          .catch(err => {\n            reject(formatStripeError(err));\n          });\n      })\n      .catch(err => {\n        reject(err);\n      });\n  });\n}\n"],"file":"createIntent.js"}