{"version":3,"sources":["../../../../../server/api/actions/userDetails/loadAll.js"],"names":["loadAll","req","reqSecured","userDetailsAllowedAttributes","Promise","resolve","reject","then","user","admin","redisKey","includeOwnerUname","includeDeleted","UNAUTHORISED_READ","err"],"mappings":";;;;;;;;;AAAA;;AAEA;;AAEA;;AACA;;AACA;;AAEe,SAASA,OAAT,CAAiBC,GAAjB,EAAsB;AACnC,MAAMC,UAAU,GAAG,2BAAUD,GAAV,EAAeE,wCAAf,CAAnB;AACA,SAAO,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACtC,oCAAeJ,UAAf,EAA2BK,IAA3B,CACE,UAAAC,IAAI,EAAI;AACN,UAAIA,IAAI,IAAIA,IAAI,CAACC,KAAjB,EAAwB;AACtBJ,QAAAA,OAAO,CACL,sBAAU;AACRK,UAAAA,QAAQ,EAAE,aADF;AAERC,UAAAA,iBAAiB,EAAE,IAFX;AAGRC,UAAAA,cAAc,EAAE;AAHR,SAAV,CADK,CAAP;AAOD,OARD,MAQO;AACLN,QAAAA,MAAM,CAACO,4BAAD,CAAN;AACD;AACF,KAbH,EAcE,UAAAC,GAAG;AAAA,aAAIR,MAAM,CAACQ,GAAD,CAAV;AAAA,KAdL;AAgBD,GAjBM,CAAP;AAkBD","sourcesContent":["import { datumLoad } from '../datum';\n\nimport userDetailsAllowedAttributes from './userDetailsAllowedAttributes';\n\nimport authentication from 'utils/authentication';\nimport reqSecure from 'utils/reqSecure';\nimport { UNAUTHORISED_READ } from 'helpers/constants';\n\nexport default function loadAll(req) {\n  const reqSecured = reqSecure(req, userDetailsAllowedAttributes);\n  return new Promise((resolve, reject) => {\n    authentication(reqSecured).then(\n      user => {\n        if (user && user.admin) {\n          resolve(\n            datumLoad({\n              redisKey: 'userDetails',\n              includeOwnerUname: true,\n              includeDeleted: true,\n            }),\n          );\n        } else {\n          reject(UNAUTHORISED_READ);\n        }\n      },\n      err => reject(err),\n    );\n  });\n}\n"],"file":"loadAll.js"}