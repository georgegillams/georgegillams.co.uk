{"version":3,"sources":["../../../../../server/api/actions/magiclinks/load.js"],"names":["load","req","Promise","resolve","reject","then","user","admin","includeDeleted","redisKey","UNAUTHORISED_READ","err"],"mappings":";;;;;;;;;AAAA;;AAEA;;AACA;;AACA;;AAEe,SAASA,IAAT,CAAcC,GAAd,EAAmB;AAChC,SAAO,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACtC,oCAAeH,GAAf,EAAoBI,IAApB,CACE,UAAAC,IAAI,EAAI;AACN,UAAIA,IAAI,IAAIA,IAAI,CAACC,KAAjB,EAAwB;AACtBJ,QAAAA,OAAO,CAAC,sBAAU;AAAEK,UAAAA,cAAc,EAAE,IAAlB;AAAwBC,UAAAA,QAAQ,EAAE;AAAlC,SAAV,CAAD,CAAP;AACD,OAFD,MAEO;AACLL,QAAAA,MAAM,CAACM,4BAAD,CAAN;AACD;AACF,KAPH,EAQE,UAAAC,GAAG;AAAA,aAAIP,MAAM,CAACO,GAAD,CAAV;AAAA,KARL;AAUD,GAXM,CAAP;AAYD","sourcesContent":["import { datumLoad } from '../datum';\n\nimport authentication from 'utils/authentication';\nimport { UNAUTHORISED_READ } from 'helpers/constants';\nimport reqSecure from 'utils/reqSecure';\n\nexport default function load(req) {\n  return new Promise((resolve, reject) => {\n    authentication(req).then(\n      user => {\n        if (user && user.admin) {\n          resolve(datumLoad({ includeDeleted: true, redisKey: 'magiclinks' }));\n        } else {\n          reject(UNAUTHORISED_READ);\n        }\n      },\n      err => reject(err),\n    );\n  });\n}\n"],"file":"load.js"}