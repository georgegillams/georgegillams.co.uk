{"version":3,"sources":["../../../../../server/api/actions/datum/datumLoad.js"],"names":["datumLoad","settings","Promise","resolve","includeOwnerUname","redisKey","then","userData","redis","lrange","err","reply","result","inc","value","JSON","parse","authorId","commentOwner","existingValue","ownerUname","uname","removeFields","forEach","rf","filter","deleted","includeDeleted","push","length","sortKey"],"mappings":"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","sourcesContent":["import sortBy from 'lodash/sortBy';\nimport reverse from 'lodash/reverse';\n\nimport redis from 'utils/redis';\nimport { find } from 'utils/find';\n\nexport default function datumLoad(settings) {\n  // load(req) {\n  return new Promise(resolve => {\n    if (settings.includeOwnerUname && settings.redisKey !== 'users') {\n      datumLoad({ redisKey: 'users' }).then(userData => {\n        redis.lrange(settings.redisKey, 0, -1, (err, reply) => {\n          let result = [];\n          for (let inc = 0; inc < reply.length; inc += 1) {\n            const value = JSON.parse(reply[inc]);\n\n            if (value.authorId) {\n              const { existingValue: commentOwner } = find(\n                userData,\n                value.authorId,\n              );\n\n              let ownerUname = 'Anon';\n              if (commentOwner && commentOwner.uname) {\n                ownerUname = commentOwner.uname;\n              }\n\n              value.ownerUname = ownerUname;\n              if (settings.removeFields) {\n                settings.removeFields.forEach(rf => {\n                  value[rf] = null;\n                });\n              }\n            }\n            if (!settings.filter || settings.filter(value)) {\n              if (!value.deleted || settings.includeDeleted) {\n                result.push(value);\n              }\n            }\n          }\n\n          if (settings.sortKey) {\n            result = reverse(sortBy(result, [settings.sortKey]));\n          }\n\n          resolve(result);\n        });\n      });\n    } else {\n      redis.lrange(settings.redisKey, 0, -1, (err, reply) => {\n        let result = [];\n        for (let inc = 0; inc < reply.length; inc += 1) {\n          const value = JSON.parse(reply[inc]);\n          if (!settings.filter || settings.filter(value)) {\n            if (!value.deleted || settings.includeDeleted) {\n              result.push(value);\n            }\n          }\n          if (settings.removeFields) {\n            settings.removeFields.forEach(rf => {\n              value[rf] = null;\n            });\n          }\n        }\n\n        if (settings.sortKey) {\n          result = reverse(sortBy(result, [settings.sortKey]));\n        }\n\n        resolve(result);\n      });\n    }\n  });\n}\n"],"file":"datumLoad.js"}