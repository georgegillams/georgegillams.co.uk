{"version":3,"sources":["../../../../../server/api/actions/datum/datumUpdate.js"],"names":["datumUpdate","settings","req","Promise","resolve","reject","includeDeleted","sortKey","filter","then","data","values","value","body","id","existingValue","existingValueIndex","timestamp","lastUpdatedTimestamp","Date","now","authorId","redis","lset","redisKey","JSON","stringify","session","err"],"mappings":";;;;;;;;;AAAA;;AAEA;;AACA;;AACA;;AAEe,SAASA,WAAT,CAAqBC,QAArB,EAA+BC,GAA/B,EAAoC;AACjD,SAAO,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACtC;AACAJ,IAAAA,QAAQ,CAACK,cAAT,GAA0B,IAA1B;AACAL,IAAAA,QAAQ,CAACM,OAAT,GAAmB,IAAnB;AACAN,IAAAA,QAAQ,CAACO,MAAT,GAAkB,IAAlB;AAEA,+BAAUP,QAAV,EAAoBC,GAApB,EAAyBO,IAAzB,CACE,UAAAC,IAAI,EAAI;AACN,UAAMC,MAAM,GAAGD,IAAf;AACA,UAAME,KAAK,GAAGV,GAAG,CAACW,IAAlB;;AAFM,kBAGwC,iBAAKF,MAAL,EAAaC,KAAK,CAACE,EAAnB,CAHxC;AAAA,UAGEC,aAHF,SAGEA,aAHF;AAAA,UAGiBC,kBAHjB,SAGiBA,kBAHjB;;AAKN,UAAID,aAAJ,EAAmB;AACjB;AACAH,QAAAA,KAAK,CAACK,SAAN,GAAkBF,aAAa,CAACE,SAAhC;AACAL,QAAAA,KAAK,CAACM,oBAAN,GAA6BC,IAAI,CAACC,GAAL,EAA7B;AACAR,QAAAA,KAAK,CAACS,QAAN,GAAiBN,aAAa,CAACM,QAA/B;AAEAV,QAAAA,MAAM,CAACK,kBAAD,CAAN,GAA6BJ,KAA7B;;AACAU,0BAAMC,IAAN,CACEtB,QAAQ,CAACuB,QADX,EAEER,kBAFF,EAGES,IAAI,CAACC,SAAL,CAAed,KAAf,CAHF;;AAKA,YACEX,QAAQ,CAACuB,QAAT,KAAsB,UAAtB,IACAvB,QAAQ,CAACuB,QAAT,KAAsB,gBAFxB,EAGE;AACA;AACD;AACF;;AACD,UAAItB,GAAG,CAACyB,OAAR,EAAiB;AACfzB,QAAAA,GAAG,CAACyB,OAAJ,CAAY1B,QAAQ,CAACuB,QAArB,IAAiCb,MAAjC;AACD;;AACDP,MAAAA,OAAO,CAACQ,KAAD,CAAP;AACD,KA7BH,EA8BE,UAAAgB,GAAG,EAAI;AACLvB,MAAAA,MAAM,CAACuB,GAAD,CAAN;AACD,KAhCH;AAkCD,GAxCM,CAAP;AAyCD","sourcesContent":["import datumLoad from './datumLoad';\n\nimport redis from 'utils/redis';\nimport { find } from 'utils/find';\nimport setContentLastUpdatedTimestamp from 'utils/setContentLastUpdatedTimestamp';\n\nexport default function datumUpdate(settings, req) {\n  return new Promise((resolve, reject) => {\n    // Need to unset all of these, as alternative values will affect the index, and cause the redis update command to update the wrong entry\n    settings.includeDeleted = true;\n    settings.sortKey = null;\n    settings.filter = null;\n\n    datumLoad(settings, req).then(\n      data => {\n        const values = data;\n        const value = req.body;\n        const { existingValue, existingValueIndex } = find(values, value.id);\n\n        if (existingValue) {\n          // Persist unchangeable values\n          value.timestamp = existingValue.timestamp;\n          value.lastUpdatedTimestamp = Date.now();\n          value.authorId = existingValue.authorId;\n\n          values[existingValueIndex] = value;\n          redis.lset(\n            settings.redisKey,\n            existingValueIndex,\n            JSON.stringify(value),\n          );\n          if (\n            settings.redisKey !== 'sessions' &&\n            settings.redisKey !== 'contentUpdates'\n          ) {\n            setContentLastUpdatedTimestamp();\n          }\n        }\n        if (req.session) {\n          req.session[settings.redisKey] = values;\n        }\n        resolve(value);\n      },\n      err => {\n        reject(err);\n      },\n    );\n  });\n}\n"],"file":"datumUpdate.js"}