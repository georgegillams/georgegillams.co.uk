{"version":3,"sources":["../../../../../server/api/actions/data-management/restore.js"],"names":["create","req","Promise","resolve","reject","then","user","admin","files","backupFile","dataBuffer","data","restorationObject","JSON","parse","toString","projectName","PROJECT_NAME","error","errorMessage","result","UNAUTHORISED_WRITE","err"],"mappings":";;;;;;;;;AAAA;;AAEA;;AACA;;AAEe,SAASA,MAAT,CAAgBC,GAAhB,EAAqB;AAClC,SAAO,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACtC,oCAAeH,GAAf,EAAoBI,IAApB,CACE,UAAAC,IAAI,EAAI;AACN,UAAIA,IAAI,IAAIA,IAAI,CAACC,KAAjB,EAAwB;AACtB,YAAIN,GAAG,CAACO,KAAJ,IAAaP,GAAG,CAACO,KAAJ,CAAUC,UAA3B,EAAuC;AACrC,cAAMC,UAAU,GAAGT,GAAG,CAACO,KAAJ,CAAUC,UAAV,CAAqBE,IAAxC;AACA,cAAMC,iBAAiB,GAAGC,IAAI,CAACC,KAAL,CAAWJ,UAAU,CAACK,QAAX,EAAX,CAA1B;;AACA,cAAIH,iBAAiB,CAACI,WAAlB,KAAkCC,uBAAtC,EAAoD;AAClDb,YAAAA,MAAM,CAAC;AACLc,cAAAA,KAAK,EAAE,aADF;AAELC,cAAAA,YAAY,EAAE;AAFT,aAAD,CAAN;AAID,WALD,MAKO;AACL,gDAAmBP,iBAAiB,CAACD,IAArC,EAA2CN,IAA3C,CAAgD,UAAAe,MAAM,EAAI;AACxDjB,cAAAA,OAAO,CAAC,IAAD,CAAP;AACD,aAFD;AAGD;;AACD;AACD;;AACDC,QAAAA,MAAM,CAAC;AACLc,UAAAA,KAAK,EAAE,aADF;AAELC,UAAAA,YAAY,EACV;AAHG,SAAD,CAAN;AAKD,OArBD,MAqBO;AACLf,QAAAA,MAAM,CAACiB,6BAAD,CAAN;AACD;AACF,KA1BH,EA2BE,UAAAC,GAAG;AAAA,aAAIlB,MAAM,CAACkB,GAAD,CAAV;AAAA,KA3BL;AA6BD,GA9BM,CAAP;AA+BD","sourcesContent":["import performRestoration from './performRestoration';\n\nimport authentication from 'utils/authentication';\nimport { UNAUTHORISED_WRITE, PROJECT_NAME } from 'helpers/constants';\n\nexport default function create(req) {\n  return new Promise((resolve, reject) => {\n    authentication(req).then(\n      user => {\n        if (user && user.admin) {\n          if (req.files && req.files.backupFile) {\n            const dataBuffer = req.files.backupFile.data;\n            const restorationObject = JSON.parse(dataBuffer.toString());\n            if (restorationObject.projectName !== PROJECT_NAME) {\n              reject({\n                error: 'wrong-input',\n                errorMessage: 'The backup was taken from a different project.',\n              });\n            } else {\n              performRestoration(restorationObject.data).then(result => {\n                resolve(true);\n              });\n            }\n            return;\n          }\n          reject({\n            error: 'wrong-input',\n            errorMessage:\n              'A backup file must be provided to carry out the restoration.',\n          });\n        } else {\n          reject(UNAUTHORISED_WRITE);\n        }\n      },\n      err => reject(err),\n    );\n  });\n}\n"],"file":"restore.js"}