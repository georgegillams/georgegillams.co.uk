{"version":3,"sources":["../../../../server/api/actions/deleteSet.js"],"names":["deleteSetAllowedAttributes","attribute","pattern","STRING_REGEX","deleteSet","req","reqSecured","Promise","resolve","reject","then","user","admin","collectionName","body","error","errorMessage","redis","del","UNAUTHORISED_WRITE","err"],"mappings":";;;;;;;;;AAAA;;AAEA;;AACA;;AACA;;AAEA;;AACA;;AACA;;AAEA,IAAMA,0BAA0B,GAAG,CACjC;AAAEC,EAAAA,SAAS,EAAE,gBAAb;AAA+BC,EAAAA,OAAO,EAAEC;AAAxC,CADiC,CAAnC;;AAIe,SAASC,SAAT,CAAmBC,GAAnB,EAAwB;AACrC,MAAMC,UAAU,GAAG,2BAAUD,GAAV,EAAeL,0BAAf,CAAnB;AACA,SAAO,IAAIO,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACtC,oCAAeH,UAAf,EAA2BI,IAA3B,CACE,UAAAC,IAAI,EAAI;AACN,UAAIA,IAAI,IAAIA,IAAI,CAACC,KAAjB,EAAwB;AAAA,YACdC,cADc,GACKP,UAAU,CAACQ,IADhB,CACdD,cADc;;AAEtB,YAAI,CAACA,cAAL,EAAqB;AACnBJ,UAAAA,MAAM,CAAC;AACLM,YAAAA,KAAK,eADA;AAELC,YAAAA,YAAY,EAAE;AAFT,WAAD,CAAN;AAID,SALD,MAKO;AACLR,UAAAA,OAAO,CAACS,kBAAMC,GAAN,CAAUL,cAAV,CAAD,CAAP;AACA;AACD;AACF,OAXD,MAWO;AACLJ,QAAAA,MAAM,CAACU,6BAAD,CAAN;AACD;AACF,KAhBH,EAiBE,UAAAC,GAAG;AAAA,aAAIX,MAAM,CAACW,GAAD,CAAV;AAAA,KAjBL;AAmBD,GApBM,CAAP;AAqBD","sourcesContent":["import { datumLoad, datumUpdate } from '../actions/datum';\n\nimport { STRING_REGEX, ID_REGEX, RESOURCE_NOT_FOUND } from 'helpers/constants';\nimport redis from 'utils/redis';\nimport { find } from 'utils/find';\nimport { UNAUTHORISED_WRITE } from 'helpers/constants';\nimport authentication from 'utils/authentication';\nimport setContentLastUpdatedTimestamp from 'utils/setContentLastUpdatedTimestamp';\nimport reqSecure from 'utils/reqSecure';\n\nconst deleteSetAllowedAttributes = [\n  { attribute: 'collectionName', pattern: STRING_REGEX },\n];\n\nexport default function deleteSet(req) {\n  const reqSecured = reqSecure(req, deleteSetAllowedAttributes);\n  return new Promise((resolve, reject) => {\n    authentication(reqSecured).then(\n      user => {\n        if (user && user.admin) {\n          const { collectionName } = reqSecured.body;\n          if (!collectionName) {\n            reject({\n              error: `wrong-input`,\n              errorMessage: 'CollectionName must be provided',\n            });\n          } else {\n            resolve(redis.del(collectionName));\n            setContentLastUpdatedTimestamp();\n          }\n        } else {\n          reject(UNAUTHORISED_WRITE);\n        }\n      },\n      err => reject(err),\n    );\n  });\n}\n"],"file":"deleteSet.js"}