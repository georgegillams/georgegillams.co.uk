{"version":3,"sources":["../../../../../server/api/actions/payments/load.js"],"names":["loadAll","req","reqSecured","paymentsAllowedAttributes","Promise","resolve","reject","then","user","admin","redisKey","includeDeleted","paymentData","charges","result","UNAUTHORISED_READ","err"],"mappings":";;;;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AACA;;AAEe,SAASA,OAAT,CAAiBC,GAAjB,EAAsB;AACnC,MAAMC,UAAU,GAAG,2BAAUD,GAAV,EAAeE,qCAAf,CAAnB;AACA,SAAO,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACtC,oCAAeJ,UAAf,EAA2BK,IAA3B,CACE,UAAAC,IAAI,EAAI;AACN,UAAIA,IAAI,IAAIA,IAAI,CAACC,KAAjB,EAAwB;AACtB,8BAAU;AACRC,UAAAA,QAAQ,EAAE,UADF;AAERC,UAAAA,cAAc,EAAE;AAFR,SAAV,EAGGJ,IAHH,CAGQ,UAAAK,WAAW,EAAI;AACrB,gCAAU;AACRF,YAAAA,QAAQ,EAAE,gBADF;AAERC,YAAAA,cAAc,EAAE;AAFR,WAAV,EAGGJ,IAHH,CAGQ,UAAAM,OAAO,EAAI;AACjB,gBAAMC,MAAM,GAAG,wBACbF,WADa,EAEbC,OAFa,EAGb,IAHa,EAIb,WAJa,EAKb,QALa,EAMb,KANa,CAAf;AAQAR,YAAAA,OAAO,CAACS,MAAD,CAAP;AACD,WAbD;AAcD,SAlBD;AAmBD,OApBD,MAoBO;AACLR,QAAAA,MAAM,CAACS,4BAAD,CAAN;AACD;AACF,KAzBH,EA0BE,UAAAC,GAAG;AAAA,aAAIV,MAAM,CAACU,GAAD,CAAV;AAAA,KA1BL;AA4BD,GA7BM,CAAP;AA8BD","sourcesContent":["import { datumLoad } from '../datum';\nimport authentication from 'utils/authentication';\nimport reqSecure from 'utils/reqSecure';\nimport { UNAUTHORISED_READ } from 'helpers/constants';\nimport { associate } from 'helpers/objects';\nimport paymentsAllowedAttributes from './paymentsAllowedAttributes';\n\nexport default function loadAll(req) {\n  const reqSecured = reqSecure(req, paymentsAllowedAttributes);\n  return new Promise((resolve, reject) => {\n    authentication(reqSecured).then(\n      user => {\n        if (user && user.admin) {\n          datumLoad({\n            redisKey: 'payments',\n            includeDeleted: true,\n          }).then(paymentData => {\n            datumLoad({\n              redisKey: 'stripepayments',\n              includeDeleted: true,\n            }).then(charges => {\n              const result = associate(\n                paymentData,\n                charges,\n                'id',\n                'paymentId',\n                'charge',\n                false,\n              );\n              resolve(result);\n            });\n          });\n        } else {\n          reject(UNAUTHORISED_READ);\n        }\n      },\n      err => reject(err),\n    );\n  });\n}\n"],"file":"load.js"}