{"version":3,"sources":["../../../../../server/api/actions/payments/remove.js"],"names":["remove","req","Promise","resolve","reject","then","user","admin","redisKey","UNAUTHORISED_WRITE","err"],"mappings":";;;;;;;;;AAAA;;AAEA;;AACA;;AAEe,SAASA,MAAT,CAAgBC,GAAhB,EAAqB;AAClC,SAAO,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACtC,oCAAeH,GAAf,EAAoBI,IAApB,CACE,UAAAC,IAAI,EAAI;AACN,UAAIA,IAAI,IAAIA,IAAI,CAACC,KAAjB,EAAwB;AACtBJ,QAAAA,OAAO,CAAC,wBAAY;AAAEK,UAAAA,QAAQ,EAAE;AAAZ,SAAZ,EAAsCP,GAAtC,CAAD,CAAP;AACD,OAFD,MAEO;AACLG,QAAAA,MAAM,CAACK,6BAAD,CAAN;AACD;AACF,KAPH,EAQE,UAAAC,GAAG;AAAA,aAAIN,MAAM,CAACM,GAAD,CAAV;AAAA,KARL;AAUD,GAXM,CAAP;AAYD","sourcesContent":["import { datumRemove } from '../datum';\n\nimport authentication from 'utils/authentication';\nimport { UNAUTHORISED_WRITE } from 'helpers/constants';\n\nexport default function remove(req) {\n  return new Promise((resolve, reject) => {\n    authentication(req).then(\n      user => {\n        if (user && user.admin) {\n          resolve(datumRemove({ redisKey: 'payments' }, req));\n        } else {\n          reject(UNAUTHORISED_WRITE);\n        }\n      },\n      err => reject(err),\n    );\n  });\n}\n"],"file":"remove.js"}