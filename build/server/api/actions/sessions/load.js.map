{"version":3,"sources":["../../../../../server/api/actions/sessions/load.js"],"names":["load","req","Promise","resolve","reject","then","user","admin","redisKey","error","reason","err"],"mappings":";;;;;;;;;AAAA;;AAEA;;AAEe,SAASA,IAAT,CAAcC,GAAd,EAAmB;AAChC,SAAO,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACtC,oCAAeH,GAAf,EAAoBI,IAApB,CACE,UAAAC,IAAI,EAAI;AACN,UAAIA,IAAI,IAAIA,IAAI,CAACC,KAAjB,EAAwB;AACtBJ,QAAAA,OAAO,CAAC,sBAAU;AAAEK,UAAAA,QAAQ,EAAE;AAAZ,SAAV,CAAD,CAAP;AACD,OAFD,MAEO;AACLJ,QAAAA,MAAM,CAAC;AACLK,UAAAA,KAAK,EAAE,gBADF;AAELC,UAAAA,MAAM,EAAE;AAFH,SAAD,CAAN;AAID;AACF,KAVH,EAWE,UAAAC,GAAG;AAAA,aAAIP,MAAM,CAACO,GAAD,CAAV;AAAA,KAXL;AAaD,GAdM,CAAP;AAeD","sourcesContent":["import { datumLoad } from '../datum';\n\nimport authentication from 'utils/authentication';\n\nexport default function load(req) {\n  return new Promise((resolve, reject) => {\n    authentication(req).then(\n      user => {\n        if (user && user.admin) {\n          resolve(datumLoad({ redisKey: 'sessions' }));\n        } else {\n          reject({\n            error: 'authentication',\n            reason: 'You are not authorised to read this resource',\n          });\n        }\n      },\n      err => reject(err),\n    );\n  });\n}\n"],"file":"load.js"}