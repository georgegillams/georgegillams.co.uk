{"version":3,"sources":["../../../../../server/api/actions/sessions/keepalive.js"],"names":["keepalive","req","Promise","resolve","reject","redisKey","then","sessionData","cookies","session","existingValue","lastActive","Date","now","body","INVALID_SESSION"],"mappings":";;;;;;;;;AAAA;;AAEA;;AACA;;AACA;;AAEe,SAASA,SAAT,CAAmBC,GAAnB,EAAwB;AACrC,SAAO,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACtC,0BAAU;AAAEC,MAAAA,QAAQ,EAAE;AAAZ,KAAV,EAAoCC,IAApC,CAAyC,UAAAC,WAAW,EAAI;AAAA,kBACnB,iBACjCA,WADiC,EAEjCN,GAAG,CAACO,OAAJ,CAAYC,OAFqB,EAGjC,YAHiC,CADmB;AAAA,UAC/BA,OAD+B,SAC9CC,aAD8C;;AAMtD,UAAID,OAAJ,EAAa;AACXA,QAAAA,OAAO,CAACE,UAAR,GAAqBC,IAAI,CAACC,GAAL,EAArB;AACA,gCAAY;AAAER,UAAAA,QAAQ,EAAE;AAAZ,SAAZ,EAAsC;AAAES,UAAAA,IAAI,EAAEL;AAAR,SAAtC;AACD,OAHD,MAGO;AACLL,QAAAA,MAAM,CAACW,0BAAD,CAAN;AACD;;AACDZ,MAAAA,OAAO,CAAC,iDAAD,CAAP;AACD,KAbD;AAcD,GAfM,CAAP;AAgBD","sourcesContent":["import { datumLoad, datumUpdate } from '../datum';\n\nimport { INVALID_SESSION } from 'helpers/constants';\nimport getContentLastUpdatedTimestamp from 'utils/getContentLastUpdatedTimestamp';\nimport { find } from 'utils/find';\n\nexport default function keepalive(req) {\n  return new Promise((resolve, reject) => {\n    datumLoad({ redisKey: 'sessions' }).then(sessionData => {\n      const { existingValue: session } = find(\n        sessionData,\n        req.cookies.session,\n        'sessionKey',\n      );\n      if (session) {\n        session.lastActive = Date.now();\n        datumUpdate({ redisKey: 'sessions' }, { body: session });\n      } else {\n        reject(INVALID_SESSION);\n      }\n      resolve(getContentLastUpdatedTimestamp());\n    });\n  });\n}\n"],"file":"keepalive.js"}