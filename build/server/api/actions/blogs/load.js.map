{"version":3,"sources":["../../../../../server/api/actions/blogs/load.js"],"names":["load","req","Promise","resolve","reject","then","user","redisKey","sortKey","includeDeleted","admin","filter","b","published","err"],"mappings":";;;;;;;;;AAAA;;AAEA;;AAEe,SAASA,IAAT,CAAcC,GAAd,EAAmB;AAChC,SAAO,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACtC,oCAAeH,GAAf,EAAoBI,IAApB,CACE,UAAAC,IAAI,EAAI;AACNH,MAAAA,OAAO,CACL,sBAAU;AACRI,QAAAA,QAAQ,EAAE,OADF;AAERC,QAAAA,OAAO,EAAE,oBAFD;AAGRC,QAAAA,cAAc,EAAEH,IAAI,IAAIA,IAAI,CAACI,KAHrB;AAIRC,QAAAA,MAAM,EAAE,gBAAAC,CAAC;AAAA,iBAAIA,CAAC,CAACC,SAAF,IAAgBP,IAAI,IAAIA,IAAI,CAACI,KAAjC;AAAA;AAJD,OAAV,CADK,CAAP;AAQD,KAVH,EAWE,UAAAI,GAAG;AAAA,aAAIV,MAAM,CAACU,GAAD,CAAV;AAAA,KAXL;AAaD,GAdM,CAAP;AAeD","sourcesContent":["import { datumLoad } from '../datum';\n\nimport authentication from 'utils/authentication';\n\nexport default function load(req) {\n  return new Promise((resolve, reject) => {\n    authentication(req).then(\n      user => {\n        resolve(\n          datumLoad({\n            redisKey: 'blogs',\n            sortKey: 'publishedTimestamp',\n            includeDeleted: user && user.admin,\n            filter: b => b.published || (user && user.admin),\n          }),\n        );\n      },\n      err => reject(err),\n    );\n  });\n}\n"],"file":"load.js"}