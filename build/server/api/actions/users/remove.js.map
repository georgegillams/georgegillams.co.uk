{"version":3,"sources":["../../../../../server/api/actions/users/remove.js"],"names":["remove","req","reqSecured","usersAllowedAttributes","Promise","resolve","reject","then","user","body","id","userOwnsResourceResult","admin","redisKey","UNAUTHORISED_WRITE","err"],"mappings":";;;;;;;;;AAAA;;AAEA;;AAEA;;AACA;;AACA;;AACA;;AAEe,SAASA,MAAT,CAAgBC,GAAhB,EAAqB;AAClC,MAAMC,UAAU,GAAG,2BAAUD,GAAV,EAAeE,kCAAf,CAAnB;AACA,SAAO,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACtC,oCAAeJ,UAAf,EAA2BK,IAA3B,CACE,UAAAC,IAAI,EAAI;AACN,8CAAiB,OAAjB,EAA0BN,UAAU,CAACO,IAAX,CAAgBC,EAA1C,EAA8CF,IAA9C,EAAoDD,IAApD,CACE,UAAAI,sBAAsB,EAAI;AACxB;AACA,YAAIH,IAAI,KAAKA,IAAI,CAACI,KAAL,IAAcD,sBAAnB,CAAR,EAAoD;AAClDN,UAAAA,OAAO,CAAC,wBAAY;AAAEQ,YAAAA,QAAQ,EAAE;AAAZ,WAAZ,EAAmCX,UAAnC,CAAD,CAAP;AACD,SAFD,MAEO;AACLI,UAAAA,MAAM,CAACQ,6BAAD,CAAN;AACD;AACF,OARH;AAUD,KAZH,EAaE,UAAAC,GAAG;AAAA,aAAIT,MAAM,CAACS,GAAD,CAAV;AAAA,KAbL;AAeD,GAhBM,CAAP;AAiBD","sourcesContent":["import { datumRemove } from '../datum';\n\nimport usersAllowedAttributes from './usersAllowedAttributes';\n\nimport authentication from 'utils/authentication';\nimport { userOwnsResource } from 'utils/userOwnsResource';\nimport { UNAUTHORISED_WRITE } from 'helpers/constants';\nimport reqSecure from 'utils/reqSecure';\n\nexport default function remove(req) {\n  const reqSecured = reqSecure(req, usersAllowedAttributes);\n  return new Promise((resolve, reject) => {\n    authentication(reqSecured).then(\n      user => {\n        userOwnsResource('users', reqSecured.body.id, user).then(\n          userOwnsResourceResult => {\n            // Users should be able to delete their own user\n            if (user && (user.admin || userOwnsResourceResult)) {\n              resolve(datumRemove({ redisKey: 'users' }, reqSecured));\n            } else {\n              reject(UNAUTHORISED_WRITE);\n            }\n          },\n        );\n      },\n      err => reject(err),\n    );\n  });\n}\n"],"file":"remove.js"}