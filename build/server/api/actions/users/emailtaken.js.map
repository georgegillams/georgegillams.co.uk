{"version":3,"sources":["../../../../../server/api/actions/users/emailtaken.js"],"names":["emailtaken","req","reqSecured","usersAllowedAttributes","Promise","resolve","setTimeout","redisKey","then","userData","body","email","userWithEmail","existingValue"],"mappings":";;;;;;;;;AAAA;;AAEA;;AAEA;;AACA;;AAEe,SAASA,UAAT,CAAoBC,GAApB,EAAyB;AACtC,MAAMC,UAAU,GAAG,2BAAUD,GAAV,EAAeE,kCAAf,CAAnB;AACA,SAAO,IAAIC,OAAJ,CAAY,UAAAC,OAAO,EAAI;AAC5BC,IAAAA,UAAU,CAAC,YAAM;AACf,4BAAU;AAAEC,QAAAA,QAAQ,EAAE;AAAZ,OAAV,EAAiCC,IAAjC,CAAsC,UAAAC,QAAQ,EAAI;AAChD;AADgD,oBAEP,iBACvCA,QADuC,EAEvC,6BAAiBP,UAAU,CAACQ,IAAX,CAAgBC,KAAjC,CAFuC,EAGvC,kBAHuC,CAFO;AAAA,YAEzBC,aAFyB,SAExCC,aAFwC;;AAOhD,YAAID,aAAJ,EAAmB;AACjBP,UAAAA,OAAO,CAAC,IAAD,CAAP;AACD,SAFD,MAEO;AACLA,UAAAA,OAAO,CAAC,KAAD,CAAP;AACD;AACF,OAZD;AAaD,KAdS,EAcP,GAdO,CAAV;AAeD,GAhBM,CAAP;AAiBD","sourcesContent":["import { datumLoad } from '../datum';\n\nimport usersAllowedAttributes from './usersAllowedAttributes';\n\nimport { find, emailFingerprint } from 'utils/find';\nimport reqSecure from 'utils/reqSecure';\n\nexport default function emailtaken(req) {\n  const reqSecured = reqSecure(req, usersAllowedAttributes);\n  return new Promise(resolve => {\n    setTimeout(() => {\n      datumLoad({ redisKey: 'users' }).then(userData => {\n        // `find` uses `safeCompare` so it protects against user-enumeration\n        const { existingValue: userWithEmail } = find(\n          userData,\n          emailFingerprint(reqSecured.body.email),\n          'emailFingerPrint',\n        );\n        if (userWithEmail) {\n          resolve(true);\n        } else {\n          resolve(false);\n        }\n      });\n    }, 750);\n  });\n}\n"],"file":"emailtaken.js"}