{"version":3,"sources":["../../../../server/api/utils/userOwnsResource.js"],"names":["userOwnsResource","redisKey","resourceId","user","Promise","resolve","id","then","data","existingValue","authorId"],"mappings":";;;;;;;AAAA;;AAEA;;AAEO,SAASA,gBAAT,CAA0BC,QAA1B,EAAoCC,UAApC,EAAgDC,IAAhD,EAAsD;AAC3D,SAAO,IAAIC,OAAJ,CAAY,UAAAC,OAAO,EAAI;AAC5B,QAAI,CAACF,IAAL,EAAW;AACTE,MAAAA,OAAO,CAAC,KAAD,CAAP,CADS,CAET;AACD,KAHD,MAGO,IAAIJ,QAAQ,KAAK,OAAb,IAAwBC,UAAU,KAAKC,IAAI,CAACG,EAAhD,EAAoD;AACzDD,MAAAA,OAAO,CAAC,IAAD,CAAP;AACD,KAFM,MAEA;AACL,4BAAU;AAAEJ,QAAAA,QAAQ,EAARA;AAAF,OAAV,EAAwBM,IAAxB,CAA6B,UAAAC,IAAI,EAAI;AAAA,oBACT,iBAAKA,IAAL,EAAWN,UAAX,CADS;AAAA,YAC3BO,aAD2B,SAC3BA,aAD2B;;AAEnC,YAAIA,aAAJ,EAAmB;AACjBJ,UAAAA,OAAO,CAACI,aAAa,CAACC,QAAd,KAA2BP,IAAI,CAACG,EAAjC,CAAP;AACD,SAFD,MAEO;AACLD,UAAAA,OAAO,CAAC,KAAD,CAAP;AACD;AACF,OAPD;AAQD;AACF,GAhBM,CAAP;AAiBD","sourcesContent":["import { datumLoad } from '../actions/datum';\n\nimport { find } from './find';\n\nexport function userOwnsResource(redisKey, resourceId, user) {\n  return new Promise(resolve => {\n    if (!user) {\n      resolve(false);\n      // Users should be honary owners of themselves:\n    } else if (redisKey === 'users' && resourceId === user.id) {\n      resolve(true);\n    } else {\n      datumLoad({ redisKey }).then(data => {\n        const { existingValue } = find(data, resourceId);\n        if (existingValue) {\n          resolve(existingValue.authorId === user.id);\n        } else {\n          resolve(false);\n        }\n      });\n    }\n  });\n}\n"],"file":"userOwnsResource.js"}