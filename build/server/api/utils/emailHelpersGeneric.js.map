{"version":3,"sources":["../../../../server/api/utils/emailHelpersGeneric.js"],"names":["EMAIL_WIDTH","FONT_SIZE_SM","FONT_SIZE_BASE","emailOuter","branding","primaryColorFaded","EMAIL_OUTER_END","emailLogoHeader","primaryColor","imageHtml","sendMagicLinkEmail","userProfile","buttonStyle","senderEmail","divertToAdmin","loginRedirect","now","Date","oneHoursTime","getTime","magicLink","userId","id","expiry","key","crypto","randomBytes","toString","redisKey","body","magicLinkUrl","SITE_URL","transporter","sendMail","from","to","email","subject","text","html","error","console","log","sendEmailVerificationEmail","EMAIL_VERIFICATION_ENABLED","oneDaysTime","verificationLink","emailVerificationLink","sendPaymentReceiptEmail","payment","charge","success","amount","payment_method_details","card","brand","last4","created"],"mappings":"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","sourcesContent":["import crypto from 'crypto';\n\nimport { datumCreate } from '../actions/datum';\n\nimport transporter from './nodemailer';\n\nimport { SITE_URL, EMAIL_VERIFICATION_ENABLED } from 'helpers/constants';\n\nconst EMAIL_WIDTH = '600px';\nconst FONT_SIZE_SM = '18px';\nconst FONT_SIZE_BASE = '24px';\nconst emailOuter = branding => `<html lang=\"en\">\n  <head>\n    <meta charset=\"utf-8\">\n    <link href=\"https://fonts.googleapis.com/css?family=Quattrocento+Sans:400,700\" rel=\"stylesheet\" />\n  </head>\n  <body style=\"font-family: 'Quattrocento Sans', sans-serif; width: 100% !important; height: 100vh !important; -webkit-text-size-adjust: 100%; -ms-text-size-adjust: 100%; margin: -1px 0 0; padding: 0;\">\n    <table border=\"0\" cellpadding=\"0\" cellspacing=\"0\" width=\"100%\" height=\"100%\" style=\"border: 0; border-collapse: collapse; font-size: ${FONT_SIZE_BASE}; width: 100%; margin: 0 auto;>\n      <tr style=\"align: center;\">\n        <td bgcolor=\"${branding.primaryColorFaded}\">\n          <table border=\"0\" cellpadding=\"0\" cellspacing=\"0\" style=\"border: 0; border-collapse: collapse; align: left; color: #1e1e1e; font-size: ${FONT_SIZE_BASE}; width: 100%; max-width: ${EMAIL_WIDTH}; margin: 0 auto;\">`;\nconst EMAIL_OUTER_END = `</table>\n        </td>\n      </tr>\n    </table>\n  </body>\n</html>`;\nconst emailLogoHeader = branding => `<tr>\n          <td bgcolor=\"${branding.primaryColor}\" style=\"padding: 24px; color: white; font-size: 32px;\">\n            <div style=\"text-align: center;\">\n              ${branding.imageHtml}\n            </div>\n          </td>\n        </tr>`;\n\nexport function sendMagicLinkEmail(\n  userProfile,\n  branding,\n  buttonStyle,\n  senderEmail,\n  divertToAdmin,\n  loginRedirect,\n) {\n  const now = new Date();\n  const oneHoursTime = new Date(now.getTime() + 1 * 1000 * 60 * 60);\n  const magicLink = {\n    userId: userProfile.id,\n    expiry: oneHoursTime,\n    key: crypto.randomBytes(20).toString('hex'),\n  };\n  datumCreate({ redisKey: 'magiclinks' }, { body: magicLink });\n  let magicLinkUrl = `${SITE_URL}/magic-login?token=${magicLink.key}`;\n  if (loginRedirect) {\n    magicLinkUrl += `&redirect=${loginRedirect}`;\n  }\n  // Send the magic link URL to the email address of the user\n  transporter.sendMail(\n    {\n      from: senderEmail,\n      to: divertToAdmin\n        ? 'g+diverted-to-admin@georgegillams.co.uk'\n        : userProfile.email,\n      subject: 'Your magic login link',\n      text: `Your magic link is:\n${magicLinkUrl}\\n\\nIt will expire ${oneHoursTime.toString()}`,\n      html: `${emailOuter(branding)}\n  ${emailLogoHeader(branding)}\n  <tr>\n    <td bgcolor=\"white\" style=\"padding: 24px; text-align: center;\">\n      <p>\n        Tap the button below to login\n        <br><br><br>\n        <a href=\"${magicLinkUrl}\" style=\"${buttonStyle}\">Log in</a>\n        <br><br><br>\n        <p>\n          Once you're logged in, feel free to delete this email\n        </p>\n        <p style=\"font-size: ${FONT_SIZE_SM};\">\n          Your single-use login link will expire ${oneHoursTime.toString()}\n        </p>\n      </p>\n    </td>\n  </tr>\n${EMAIL_OUTER_END}`,\n    },\n    error => {\n      if (error) {\n        return console.log(error);\n      }\n    },\n  );\n}\n\nexport function sendEmailVerificationEmail(\n  userProfile,\n  branding,\n  buttonStyle,\n  senderEmail,\n) {\n  if (!EMAIL_VERIFICATION_ENABLED) {\n    return;\n  }\n  const now = new Date();\n  const oneDaysTime = new Date(now.getTime() + 24 * 1000 * 60 * 60);\n  const verificationLink = {\n    userId: userProfile.id,\n    expiry: oneDaysTime,\n    key: crypto.randomBytes(20).toString('hex'),\n  };\n  datumCreate(\n    { redisKey: 'emailVerificationCodes' },\n    { body: verificationLink },\n  );\n  const emailVerificationLink = `${SITE_URL}/email-verification?token=${verificationLink.key}`;\n  // Send the magic link URL to the email address of the user\n  transporter.sendMail(\n    {\n      from: senderEmail,\n      to: userProfile.email,\n      subject: 'Verify your email address',\n      text: `Your email verification link is:\n${emailVerificationLink}\\n\\nIt will expire ${oneDaysTime.toString()}`,\n      html: `${emailOuter(branding)}\n  ${emailLogoHeader(branding)}\n  <tr>\n    <td bgcolor=\"white\" style=\"padding: 24px; text-align: center;\">\n      <p>\n        Please verify your email address using the button below.\n        <br><br><br>\n        <a href=\"${emailVerificationLink}\" style=\"${buttonStyle}\">Click here to verify your email address.</a>\n        <br><br><br>\n        <p style=\"font-size: ${FONT_SIZE_SM};\">\n          This verification link will expire ${oneDaysTime.toString()}\n        </p>\n      </p>\n    </td>\n  </tr>\n${EMAIL_OUTER_END}`,\n    },\n    error => {\n      if (error) {\n        return console.log(error);\n      }\n    },\n  );\n}\n\nexport function sendPaymentReceiptEmail(\n  payment,\n  charge,\n  branding,\n  buttonStyle,\n  senderEmail,\n) {\n  let success = true;\n  transporter.sendMail(\n    {\n      from: senderEmail,\n      to: payment.email,\n      subject: 'Payment received',\n      text: `Thank you for your recent payment of Â£${charge.amount / 100}.`,\n      html: `${emailOuter(branding)}\n        ${emailLogoHeader(branding)}\n        <tr>\n          <td bgcolor=\"white\" style=\"padding: 24px 24px 0 24px;\">\n            <p>\n              Thank you for making an online payment.\n              <br><br>\n              Please find the receipt for this transaction below.\n            </p>\n          </td>\n        </tr>\n        <tr>\n          <td bgcolor=\"white\" style=\"padding: 0 24px 24px 24px; font-size: ${FONT_SIZE_SM};\">\n            <hr/>\n            <p>\n              TRANSACTION RECEIPT FOR YOUR RECORDS:\n              <br>\n              Payment name: George Gillams - online payment ${payment.id}\n              <br>\n              Payment amount: Â£${charge.amount / 100}\n              <br>\n              Payment method: ${charge.payment_method_details.card.brand}-${\n        charge.payment_method_details.card.last4\n      }\n              <br>\n              Transaction ID: ${charge.id}\n              <br>\n              Timestamp: ${new Date(charge.created * 1000).toString()}\n            </p>\n          </td>\n        </tr>\n      ${EMAIL_OUTER_END}`,\n    },\n    error => {\n      if (error) {\n        success = false;\n        return console.log(error);\n      }\n    },\n  );\n  return success;\n}\n"],"file":"emailHelpersGeneric.js"}