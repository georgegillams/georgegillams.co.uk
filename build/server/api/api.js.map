{"version":3,"sources":["../../../server/api/api.js"],"names":["pretty","PrettyError","appFunc","req","res","splittedUrlPath","url","split","slice","actions","action","params","then","result","Function","json","err","redirect","status","end"],"mappings":";;;;;;;;;;;AAAA;;AAEA;;AAEA;;AAEA,IAAMA,MAAM,GAAG,IAAIC,uBAAJ,EAAf;;AAEA,IAAMC,OAAO,GAAG,SAAVA,OAAU,CAACC,GAAD,EAAMC,GAAN,EAAc;AAC5B,MAAMC,eAAe,GAAGF,GAAG,CAACG,GAAJ,CACrBC,KADqB,CACf,GADe,EACV,CADU,EAErBA,KAFqB,CAEf,GAFe,EAGrBC,KAHqB,CAGf,CAHe,CAAxB;;AAD4B,gBAMD,iBAAOC,OAAP,EAAgBJ,eAAhB,CANC;AAAA,MAMpBK,MANoB,WAMpBA,MANoB;AAAA,MAMZC,MANY,WAMZA,MANY;;AAQ5B,MAAID,MAAJ,EAAY;AACVA,IAAAA,MAAM,CAACP,GAAD,EAAMQ,MAAN,CAAN,CAAoBC,IAApB,CACE,UAAAC,MAAM,EAAI;AACR,UAAIA,MAAM,YAAYC,QAAtB,EAAgC;AAC9BD,QAAAA,MAAM,CAACT,GAAD,CAAN;AACD,OAFD,MAEO;AACLA,QAAAA,GAAG,CAACW,IAAJ,CAASF,MAAT;AACD;AACF,KAPH,EAQE,UAAAG,GAAG,EAAI;AACL,UAAIA,GAAG,IAAIA,GAAG,CAACC,QAAf,EAAyB;AACvBb,QAAAA,GAAG,CAACa,QAAJ,CAAaD,GAAG,CAACC,QAAjB;AACD,OAFD,MAEO;AACL;AACA;AACA;AACAb,QAAAA,GAAG,CAACW,IAAJ,CAASC,GAAT;AACD;AACF,KAjBH;AAmBD,GApBD,MAoBO;AACLZ,IAAAA,GAAG,CAACc,MAAJ,CAAW,GAAX,EAAgBC,GAAhB,CAAoB,WAApB;AACD;AACF,CA/BD;;eAiCejB,O","sourcesContent":["import PrettyError from 'pretty-error';\n\nimport * as actions from './actions/index';\n\nimport { mapUrl } from 'utils/url.js';\n\nconst pretty = new PrettyError();\n\nconst appFunc = (req, res) => {\n  const splittedUrlPath = req.url\n    .split('?')[0]\n    .split('/')\n    .slice(1);\n\n  const { action, params } = mapUrl(actions, splittedUrlPath);\n\n  if (action) {\n    action(req, params).then(\n      result => {\n        if (result instanceof Function) {\n          result(res);\n        } else {\n          res.json(result);\n        }\n      },\n      err => {\n        if (err && err.redirect) {\n          res.redirect(err.redirect);\n        } else {\n          // Return a valid response even if there has been some server-side error.\n          // This gives us greater control over how we handle errors.\n          // Due to a limitation in our `react-saga` exception handling mechanism.\n          res.json(err);\n        }\n      },\n    );\n  } else {\n    res.status(404).end('NOT FOUND');\n  }\n};\n\nexport default appFunc;\n"],"file":"api.js"}